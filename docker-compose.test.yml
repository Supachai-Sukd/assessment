#version: '3.2'
#
#networks:
#  integration-test-example:
#
#services:
#  it_tests:
#    build:
#      context: .
#      dockerfile: ./Dockerfile.test
#    volumes:
#       - .:/go/src/target
#    depends_on:
#      - db_test
#    networks:
#      - integration-test-example
#  db_test:
#    image: postgres:12.12
#    environment:
#      POSTGRES_USER: root
#      POSTGRES_PASSWORD: root
#      POSTGRES_DB: go-example-db
#    restart: on-failure
#    volumes:
#      - ./db:/docker-entrypoint-initdb.d/
#    networks:
#      - integration-test-example

# docker-compose -f docker-compose.test.yml up --build
# docker-compose -f docker-compose.test.yml down



version: "3"

networks:
  integration-test-example:
    driver: bridge

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.test
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgres://root:password@127.0.0.1:5432/app_test?sslmode=disable}
      #- DATABASE_URL=postgres://postgres:password@localhost:1119/app_test?sslmode=disable
    volumes:
      - ./:/go/src/target
    networks:
      - integration-test-example
    ports:
      - "2565:2565"
    depends_on:
      - postgres
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_DB=app_test
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
    networks:
      - integration-test-example
    volumes:
      - ./db:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    expose:
      - "5432"